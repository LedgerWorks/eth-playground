// SPDX-License-Identifier: GPL-2.0-or-later
pragma solidity =0.7.6;
pragma abicoder v2;

import "./libraries/kinetic/Exponential.sol";

contract KineticExploitTester is Exponential {
  function getExchangeRate(
    uint256 totalCash,
    uint256 totalBorrows,
    uint256 totalReserves,
    uint256 totalSupply
  ) public pure returns (MathError, uint) {
    uint cashPlusBorrowsMinusReserves;
    Exp memory exchangeRate;
    MathError mathErr;
    (mathErr, cashPlusBorrowsMinusReserves) = addThenSubUInt(
      totalCash,
      totalBorrows,
      totalReserves
    );
    if (mathErr != MathError.NO_ERROR) {
      return (mathErr, 0);
    }

    (mathErr, exchangeRate) = getExp(cashPlusBorrowsMinusReserves, totalSupply);
    if (mathErr != MathError.NO_ERROR) {
      return (mathErr, 0);
    }

    return (MathError.NO_ERROR, exchangeRate.mantissa);
  }
}
